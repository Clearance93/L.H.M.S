@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            @if(User != null)
            {
                <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><marquee>@UserManager.GetUserName(User)!</marquee></a>
            }
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-light btn btn-danger"><i class="bi bi-file-earmark-lock-fill"></i></button>
        </form>
    </li>
}
else
{
    <li class="nav-item" style="margin-right: 15px;">
        <a class="nav-link text-light btn btn-success" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-registered"></i></a> 
    </li>
    <li class="nav-item">
        <a class="nav-link text-light btn btn-primary" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-shield-lock"></i></a>
    </li>
}
</ul>
